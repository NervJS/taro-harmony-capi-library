# Run manually to reformat a file:
# clang-format -i --style=file <file>
Language: Cpp
BasedOnStyle: Google

# 缩进和格式控制
IndentWidth: 4
ColumnLimit: 0
TabWidth: 4
UseTab: Never
MaxEmptyLinesToKeep: 2
KeepEmptyLinesAtTheStartOfBlocks: true

# 大括号和空格
BreakBeforeBraces: Attach
SpacesBeforeTrailingComments: 1
AlignTrailingComments: true
SpaceBeforeParens: ControlStatements
SpaceAfterTemplateKeyword: true
SpaceBeforeInheritanceColon: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeCpp11BracedList: false
ReflowComments: true

# 函数相关
AllowShortFunctionsOnASingleLine: Empty
AllowShortLambdasOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AlwaysBreakTemplateDeclarations: Yes

# 对齐和缩进
IndentCaseLabels: true
NamespaceIndentation: Inner
AccessModifierOffset: 0
PointerAlignment: Left
ReferenceAlignment: Left
DerivePointerAlignment: false
EmptyLineBeforeAccessModifier: Always
InsertNewlineAtEOF: true

# 包含文件排序
SortIncludes: true
IncludeBlocks: Regroup
IncludeCategories:
  - Regex: '^"{{fileBasenameNoExtension}}\.(h|hpp)"$' # 当前目录的头文件
    Priority: 1
    SortPriority: 0
  - Regex: '^<.*\.(h|hpp)>'                           # C 系统头文件
    Priority: 2
    SortPriority: 0
  - Regex: '^<.*>'                                    # C++ 标准库头文件
    Priority: 2
    SortPriority: 1
  - Regex: '^".*\.(h|hpp)"'                           # 项目头文件
    Priority: 3
    SortPriority: 0
  - Regex: '.*'                                       # 其他头文件
    Priority: 4
    SortPriority: 0

# 构造函数初始化列表格式
BreakConstructorInitializers: BeforeColon
ConstructorInitializerIndentWidth: 4
PackConstructorInitializers: Never

# 操作符换行
BreakBeforeBinaryOperators: None
BreakBeforeTernaryOperators: true
